apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "ongdb.replica.fullname" . }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "ongdb.name" . }}
    app.kubernetes.io/component: replica
spec:
{{- if not .Values.readReplica.autoscaling.enabled }}
  replicas: {{ .Values.readReplica.numberOfServers }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "ongdb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/component: replica
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "ongdb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/component: replica
    spec:
      containers:
      - name: ongdb
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        env:
          - name: ONGDB_dbms_mode
            value: READ_REPLICA
          - name: ONGDB_dbms_security_auth__enabled
            value: "{{ .Values.authEnabled }}"
          - name: ONGDB_causal__clustering_discovery__type
            value: DNS
          - name: ONGDB_causal__clustering_initial__discovery__members
            value: "{{ template "ongdb.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:5000"
          {{- if .Values.authEnabled }}
          - name: ONGDB_SECRETS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ongdb.secrets.fullname" . }}
                key: ongdb-password
          {{- end }}
{{- if .Values.readReplica.extraVars }}
{{ toYaml .Values.readReplica.extraVars | indent 10 }}
{{- end }}
        command:
          - "/bin/bash"
          - "-c"
          - |
            export ONGDB_dbms_connectors_default__advertised__address=$(hostname -f)
            export ONGDB_causal__clustering_transaction__advertised__address=$(hostname -f):6000

            if [ "${AUTH_ENABLED:-}" == "true" ]; then
              export ONGDB_AUTH="ongdb/${ONGDB_SECRETS_PASSWORD}"
            else
              export ONGDB_AUTH="none"
            fi

            exec /docker-entrypoint.sh "ongdb"
        ports:
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        - containerPort: 6000
          name: tx
        volumeMounts:
        - name: plugins
          mountPath: /plugins
        resources:
{{ toYaml .Values.readReplica.resources | indent 10 }}
{{- if .Values.core.sidecarContainers }}
{{ toYaml .Values.core.sidecarContainers | indent 6 }}
{{- end }}
{{- if .Values.readReplica.initContainers }}
      initContainers:
{{ toYaml .Values.readReplica.initContainers | indent 6 }}
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
        - name: plugins
          emptyDir: {}
{{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
{{- end -}}
